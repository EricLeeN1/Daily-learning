{
  "version": 3,
  "file": "line.min.js",
  "sources": [
    "../node_modules/echarts/lib/echarts.js",
    "../node_modules/echarts/lib/chart/line.js",
    "../node_modules/echarts/lib/component/tooltip.js",
    "../node_modules/echarts/lib/component/title.js",
    "../node_modules/echarts/lib/component/toolbox.js",
    "../line.js"
  ],
  "sourcesContent": [
    "var _config = require(\"./config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrender = require(\"zrender/lib/zrender\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar colorTool = require(\"zrender/lib/tool/color\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar timsort = require(\"zrender/lib/core/timsort\");\n\nvar Eventful = require(\"zrender/lib/mixin/Eventful\");\n\nvar GlobalModel = require(\"./model/Global\");\n\nvar ExtensionAPI = require(\"./ExtensionAPI\");\n\nvar CoordinateSystemManager = require(\"./CoordinateSystem\");\n\nvar OptionManager = require(\"./model/OptionManager\");\n\nvar backwardCompat = require(\"./preprocessor/backwardCompat\");\n\nvar ComponentModel = require(\"./model/Component\");\n\nvar SeriesModel = require(\"./model/Series\");\n\nvar ComponentView = require(\"./view/Component\");\n\nvar ChartView = require(\"./view/Chart\");\n\nvar graphic = require(\"./util/graphic\");\n\nvar modelUtil = require(\"./util/model\");\n\nvar _throttle = require(\"./util/throttle\");\n\nvar throttle = _throttle.throttle;\n\nvar seriesColor = require(\"./visual/seriesColor\");\n\nvar loadingDefault = require(\"./loading/default\");\n\n/*!\n * ECharts, a javascript interactive chart library.\n *\n * Copyright (c) 2015, Baidu Inc.\n * All rights reserved.\n *\n * LICENSE\n * https://github.com/ecomfe/echarts/blob/master/LICENSE.txt\n */\nvar each = zrUtil.each;\nvar parseClassType = ComponentModel.parseClassType;\nvar version = '3.8.5';\nvar dependencies = {\n  zrender: '3.7.4'\n};\nvar PRIORITY_PROCESSOR_FILTER = 1000;\nvar PRIORITY_PROCESSOR_STATISTIC = 5000;\nvar PRIORITY_VISUAL_LAYOUT = 1000;\nvar PRIORITY_VISUAL_GLOBAL = 2000;\nvar PRIORITY_VISUAL_CHART = 3000;\nvar PRIORITY_VISUAL_COMPONENT = 4000; // FIXME\n// necessary?\n\nvar PRIORITY_VISUAL_BRUSH = 5000;\nvar PRIORITY = {\n  PROCESSOR: {\n    FILTER: PRIORITY_PROCESSOR_FILTER,\n    STATISTIC: PRIORITY_PROCESSOR_STATISTIC\n  },\n  VISUAL: {\n    LAYOUT: PRIORITY_VISUAL_LAYOUT,\n    GLOBAL: PRIORITY_VISUAL_GLOBAL,\n    CHART: PRIORITY_VISUAL_CHART,\n    COMPONENT: PRIORITY_VISUAL_COMPONENT,\n    BRUSH: PRIORITY_VISUAL_BRUSH\n  }\n}; // Main process have three entries: `setOption`, `dispatchAction` and `resize`,\n// where they must not be invoked nestedly, except the only case: invoke\n// dispatchAction with updateMethod \"none\" in main process.\n// This flag is used to carry out this rule.\n// All events will be triggered out side main process (i.e. when !this[IN_MAIN_PROCESS]).\n\nvar IN_MAIN_PROCESS = '__flagInMainProcess';\nvar HAS_GRADIENT_OR_PATTERN_BG = '__hasGradientOrPatternBg';\nvar OPTION_UPDATED = '__optionUpdated';\nvar ACTION_REG = /^[a-zA-Z0-9_]+$/;\n\nfunction createRegisterEventWithLowercaseName(method) {\n  return function (eventName, handler, context) {\n    // Event name is all lowercase\n    eventName = eventName && eventName.toLowerCase();\n    Eventful.prototype[method].call(this, eventName, handler, context);\n  };\n}\n/**\n * @module echarts~MessageCenter\n */\n\n\nfunction MessageCenter() {\n  Eventful.call(this);\n}\n\nMessageCenter.prototype.on = createRegisterEventWithLowercaseName('on');\nMessageCenter.prototype.off = createRegisterEventWithLowercaseName('off');\nMessageCenter.prototype.one = createRegisterEventWithLowercaseName('one');\nzrUtil.mixin(MessageCenter, Eventful);\n/**\n * @module echarts~ECharts\n */\n\nfunction ECharts(dom, theme, opts) {\n  opts = opts || {}; // Get theme by name\n\n  if (typeof theme === 'string') {\n    theme = themeStorage[theme];\n  }\n  /**\n   * @type {string}\n   */\n\n\n  this.id;\n  /**\n   * Group id\n   * @type {string}\n   */\n\n  this.group;\n  /**\n   * @type {HTMLElement}\n   * @private\n   */\n\n  this._dom = dom;\n  var defaultRenderer = 'canvas';\n\n  /**\n   * @type {module:zrender/ZRender}\n   * @private\n   */\n  var zr = this._zr = zrender.init(dom, {\n    renderer: opts.renderer || defaultRenderer,\n    devicePixelRatio: opts.devicePixelRatio,\n    width: opts.width,\n    height: opts.height\n  });\n  /**\n   * Expect 60 pfs.\n   * @type {Function}\n   * @private\n   */\n\n  this._throttledZrFlush = throttle(zrUtil.bind(zr.flush, zr), 17);\n  var theme = zrUtil.clone(theme);\n  theme && backwardCompat(theme, true);\n  /**\n   * @type {Object}\n   * @private\n   */\n\n  this._theme = theme;\n  /**\n   * @type {Array.<module:echarts/view/Chart>}\n   * @private\n   */\n\n  this._chartsViews = [];\n  /**\n   * @type {Object.<string, module:echarts/view/Chart>}\n   * @private\n   */\n\n  this._chartsMap = {};\n  /**\n   * @type {Array.<module:echarts/view/Component>}\n   * @private\n   */\n\n  this._componentsViews = [];\n  /**\n   * @type {Object.<string, module:echarts/view/Component>}\n   * @private\n   */\n\n  this._componentsMap = {};\n  /**\n   * @type {module:echarts/CoordinateSystem}\n   * @private\n   */\n\n  this._coordSysMgr = new CoordinateSystemManager();\n  /**\n   * @type {module:echarts/ExtensionAPI}\n   * @private\n   */\n\n  this._api = createExtensionAPI(this);\n  Eventful.call(this);\n  /**\n   * @type {module:echarts~MessageCenter}\n   * @private\n   */\n\n  this._messageCenter = new MessageCenter(); // Init mouse events\n\n  this._initEvents(); // In case some people write `window.onresize = chart.resize`\n\n\n  this.resize = zrUtil.bind(this.resize, this); // Can't dispatch action during rendering procedure\n\n  this._pendingActions = []; // Sort on demand\n\n  function prioritySortFunc(a, b) {\n    return a.prio - b.prio;\n  }\n\n  timsort(visualFuncs, prioritySortFunc);\n  timsort(dataProcessorFuncs, prioritySortFunc);\n  zr.animation.on('frame', this._onframe, this); // ECharts instance can be used as value.\n\n  zrUtil.setAsPrimitive(this);\n}\n\nvar echartsProto = ECharts.prototype;\n\nechartsProto._onframe = function () {\n  // Lazy update\n  if (this[OPTION_UPDATED]) {\n    var silent = this[OPTION_UPDATED].silent;\n    this[IN_MAIN_PROCESS] = true;\n    updateMethods.prepareAndUpdate.call(this);\n    this[IN_MAIN_PROCESS] = false;\n    this[OPTION_UPDATED] = false;\n    flushPendingActions.call(this, silent);\n    triggerUpdatedEvent.call(this, silent);\n  }\n};\n/**\n * @return {HTMLElement}\n */\n\n\nechartsProto.getDom = function () {\n  return this._dom;\n};\n/**\n * @return {module:zrender~ZRender}\n */\n\n\nechartsProto.getZr = function () {\n  return this._zr;\n};\n/**\n * Usage:\n * chart.setOption(option, notMerge, lazyUpdate);\n * chart.setOption(option, {\n *     notMerge: ...,\n *     lazyUpdate: ...,\n *     silent: ...\n * });\n *\n * @param {Object} option\n * @param {Object|boolean} [opts] opts or notMerge.\n * @param {boolean} [opts.notMerge=false]\n * @param {boolean} [opts.lazyUpdate=false] Useful when setOption frequently.\n */\n\n\nechartsProto.setOption = function (option, notMerge, lazyUpdate) {\n  var silent;\n\n  if (zrUtil.isObject(notMerge)) {\n    lazyUpdate = notMerge.lazyUpdate;\n    silent = notMerge.silent;\n    notMerge = notMerge.notMerge;\n  }\n\n  this[IN_MAIN_PROCESS] = true;\n\n  if (!this._model || notMerge) {\n    var optionManager = new OptionManager(this._api);\n    var theme = this._theme;\n    var ecModel = this._model = new GlobalModel(null, null, theme, optionManager);\n    ecModel.init(null, null, theme, optionManager);\n  }\n\n  this._model.setOption(option, optionPreprocessorFuncs);\n\n  if (lazyUpdate) {\n    this[OPTION_UPDATED] = {\n      silent: silent\n    };\n    this[IN_MAIN_PROCESS] = false;\n  } else {\n    updateMethods.prepareAndUpdate.call(this); // Ensure zr refresh sychronously, and then pixel in canvas can be\n    // fetched after `setOption`.\n\n    this._zr.flush();\n\n    this[OPTION_UPDATED] = false;\n    this[IN_MAIN_PROCESS] = false;\n    flushPendingActions.call(this, silent);\n    triggerUpdatedEvent.call(this, silent);\n  }\n};\n/**\n * @DEPRECATED\n */\n\n\nechartsProto.setTheme = function () {\n  console.log('ECharts#setTheme() is DEPRECATED in ECharts 3.0');\n};\n/**\n * @return {module:echarts/model/Global}\n */\n\n\nechartsProto.getModel = function () {\n  return this._model;\n};\n/**\n * @return {Object}\n */\n\n\nechartsProto.getOption = function () {\n  return this._model && this._model.getOption();\n};\n/**\n * @return {number}\n */\n\n\nechartsProto.getWidth = function () {\n  return this._zr.getWidth();\n};\n/**\n * @return {number}\n */\n\n\nechartsProto.getHeight = function () {\n  return this._zr.getHeight();\n};\n/**\n * @return {number}\n */\n\n\nechartsProto.getDevicePixelRatio = function () {\n  return this._zr.painter.dpr || window.devicePixelRatio || 1;\n};\n/**\n * Get canvas which has all thing rendered\n * @param {Object} opts\n * @param {string} [opts.backgroundColor]\n * @return {string}\n */\n\n\nechartsProto.getRenderedCanvas = function (opts) {\n  if (!env.canvasSupported) {\n    return;\n  }\n\n  opts = opts || {};\n  opts.pixelRatio = opts.pixelRatio || 1;\n  opts.backgroundColor = opts.backgroundColor || this._model.get('backgroundColor');\n  var zr = this._zr;\n  var list = zr.storage.getDisplayList(); // Stop animations\n\n  zrUtil.each(list, function (el) {\n    el.stopAnimation(true);\n  });\n  return zr.painter.getRenderedCanvas(opts);\n};\n/**\n * Get svg data url\n * @return {string}\n */\n\n\nechartsProto.getSvgDataUrl = function () {\n  if (!env.svgSupported) {\n    return;\n  }\n\n  var zr = this._zr;\n  var list = zr.storage.getDisplayList(); // Stop animations\n\n  zrUtil.each(list, function (el) {\n    el.stopAnimation(true);\n  });\n  return zr.painter.pathToSvg();\n};\n/**\n * @return {string}\n * @param {Object} opts\n * @param {string} [opts.type='png']\n * @param {string} [opts.pixelRatio=1]\n * @param {string} [opts.backgroundColor]\n * @param {string} [opts.excludeComponents]\n */\n\n\nechartsProto.getDataURL = function (opts) {\n  opts = opts || {};\n  var excludeComponents = opts.excludeComponents;\n  var ecModel = this._model;\n  var excludesComponentViews = [];\n  var self = this;\n  each(excludeComponents, function (componentType) {\n    ecModel.eachComponent({\n      mainType: componentType\n    }, function (component) {\n      var view = self._componentsMap[component.__viewId];\n\n      if (!view.group.ignore) {\n        excludesComponentViews.push(view);\n        view.group.ignore = true;\n      }\n    });\n  });\n  var url = this._zr.painter.getType() === 'svg' ? this.getSvgDataUrl() : this.getRenderedCanvas(opts).toDataURL('image/' + (opts && opts.type || 'png'));\n  each(excludesComponentViews, function (view) {\n    view.group.ignore = false;\n  });\n  return url;\n};\n/**\n * @return {string}\n * @param {Object} opts\n * @param {string} [opts.type='png']\n * @param {string} [opts.pixelRatio=1]\n * @param {string} [opts.backgroundColor]\n */\n\n\nechartsProto.getConnectedDataURL = function (opts) {\n  if (!env.canvasSupported) {\n    return;\n  }\n\n  var groupId = this.group;\n  var mathMin = Math.min;\n  var mathMax = Math.max;\n  var MAX_NUMBER = Infinity;\n\n  if (connectedGroups[groupId]) {\n    var left = MAX_NUMBER;\n    var top = MAX_NUMBER;\n    var right = -MAX_NUMBER;\n    var bottom = -MAX_NUMBER;\n    var canvasList = [];\n    var dpr = opts && opts.pixelRatio || 1;\n    zrUtil.each(instances, function (chart, id) {\n      if (chart.group === groupId) {\n        var canvas = chart.getRenderedCanvas(zrUtil.clone(opts));\n        var boundingRect = chart.getDom().getBoundingClientRect();\n        left = mathMin(boundingRect.left, left);\n        top = mathMin(boundingRect.top, top);\n        right = mathMax(boundingRect.right, right);\n        bottom = mathMax(boundingRect.bottom, bottom);\n        canvasList.push({\n          dom: canvas,\n          left: boundingRect.left,\n          top: boundingRect.top\n        });\n      }\n    });\n    left *= dpr;\n    top *= dpr;\n    right *= dpr;\n    bottom *= dpr;\n    var width = right - left;\n    var height = bottom - top;\n    var targetCanvas = zrUtil.createCanvas();\n    targetCanvas.width = width;\n    targetCanvas.height = height;\n    var zr = zrender.init(targetCanvas);\n    each(canvasList, function (item) {\n      var img = new graphic.Image({\n        style: {\n          x: item.left * dpr - left,\n          y: item.top * dpr - top,\n          image: item.dom\n        }\n      });\n      zr.add(img);\n    });\n    zr.refreshImmediately();\n    return targetCanvas.toDataURL('image/' + (opts && opts.type || 'png'));\n  } else {\n    return this.getDataURL(opts);\n  }\n};\n/**\n * Convert from logical coordinate system to pixel coordinate system.\n * See CoordinateSystem#convertToPixel.\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            geoIndex / geoId, geoName,\n *            bmapIndex / bmapId / bmapName,\n *            xAxisIndex / xAxisId / xAxisName,\n *            yAxisIndex / yAxisId / yAxisName,\n *            gridIndex / gridId / gridName,\n *            ... (can be extended)\n *        }\n * @param {Array|number} value\n * @return {Array|number} result\n */\n\n\nechartsProto.convertToPixel = zrUtil.curry(doConvertPixel, 'convertToPixel');\n/**\n * Convert from pixel coordinate system to logical coordinate system.\n * See CoordinateSystem#convertFromPixel.\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            geoIndex / geoId / geoName,\n *            bmapIndex / bmapId / bmapName,\n *            xAxisIndex / xAxisId / xAxisName,\n *            yAxisIndex / yAxisId / yAxisName\n *            gridIndex / gridId / gridName,\n *            ... (can be extended)\n *        }\n * @param {Array|number} value\n * @return {Array|number} result\n */\n\nechartsProto.convertFromPixel = zrUtil.curry(doConvertPixel, 'convertFromPixel');\n\nfunction doConvertPixel(methodName, finder, value) {\n  var ecModel = this._model;\n\n  var coordSysList = this._coordSysMgr.getCoordinateSystems();\n\n  var result;\n  finder = modelUtil.parseFinder(ecModel, finder);\n\n  for (var i = 0; i < coordSysList.length; i++) {\n    var coordSys = coordSysList[i];\n\n    if (coordSys[methodName] && (result = coordSys[methodName](ecModel, finder, value)) != null) {\n      return result;\n    }\n  }\n}\n/**\n * Is the specified coordinate systems or components contain the given pixel point.\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            geoIndex / geoId / geoName,\n *            bmapIndex / bmapId / bmapName,\n *            xAxisIndex / xAxisId / xAxisName,\n *            yAxisIndex / yAxisId / yAxisName,\n *            gridIndex / gridId / gridName,\n *            ... (can be extended)\n *        }\n * @param {Array|number} value\n * @return {boolean} result\n */\n\n\nechartsProto.containPixel = function (finder, value) {\n  var ecModel = this._model;\n  var result;\n  finder = modelUtil.parseFinder(ecModel, finder);\n  zrUtil.each(finder, function (models, key) {\n    key.indexOf('Models') >= 0 && zrUtil.each(models, function (model) {\n      var coordSys = model.coordinateSystem;\n\n      if (coordSys && coordSys.containPoint) {\n        result |= !!coordSys.containPoint(value);\n      } else if (key === 'seriesModels') {\n        var view = this._chartsMap[model.__viewId];\n\n        if (view && view.containPoint) {\n          result |= view.containPoint(value, model);\n        } else {}\n      } else {}\n    }, this);\n  }, this);\n  return !!result;\n};\n/**\n * Get visual from series or data.\n * @param {string|Object} finder\n *        If string, e.g., 'series', means {seriesIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            dataIndex / dataIndexInside\n *        }\n *        If dataIndex is not specified, series visual will be fetched,\n *        but not data item visual.\n *        If all of seriesIndex, seriesId, seriesName are not specified,\n *        visual will be fetched from first series.\n * @param {string} visualType 'color', 'symbol', 'symbolSize'\n */\n\n\nechartsProto.getVisual = function (finder, visualType) {\n  var ecModel = this._model;\n  finder = modelUtil.parseFinder(ecModel, finder, {\n    defaultMainType: 'series'\n  });\n  var seriesModel = finder.seriesModel;\n  var data = seriesModel.getData();\n  var dataIndexInside = finder.hasOwnProperty('dataIndexInside') ? finder.dataIndexInside : finder.hasOwnProperty('dataIndex') ? data.indexOfRawIndex(finder.dataIndex) : null;\n  return dataIndexInside != null ? data.getItemVisual(dataIndexInside, visualType) : data.getVisual(visualType);\n};\n/**\n * Get view of corresponding component model\n * @param  {module:echarts/model/Component} componentModel\n * @return {module:echarts/view/Component}\n */\n\n\nechartsProto.getViewOfComponentModel = function (componentModel) {\n  return this._componentsMap[componentModel.__viewId];\n};\n/**\n * Get view of corresponding series model\n * @param  {module:echarts/model/Series} seriesModel\n * @return {module:echarts/view/Chart}\n */\n\n\nechartsProto.getViewOfSeriesModel = function (seriesModel) {\n  return this._chartsMap[seriesModel.__viewId];\n};\n\nvar updateMethods = {\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  update: function (payload) {\n    // console.profile && console.profile('update');\n    var ecModel = this._model;\n    var api = this._api;\n    var coordSysMgr = this._coordSysMgr;\n    var zr = this._zr; // update before setOption\n\n    if (!ecModel) {\n      return;\n    } // Fixme First time update ?\n\n\n    ecModel.restoreData(); // TODO\n    // Save total ecModel here for undo/redo (after restoring data and before processing data).\n    // Undo (restoration of total ecModel) can be carried out in 'action' or outside API call.\n    // Create new coordinate system each update\n    // In LineView may save the old coordinate system and use it to get the orignal point\n\n    coordSysMgr.create(this._model, this._api);\n    processData.call(this, ecModel, api);\n    stackSeriesData.call(this, ecModel);\n    coordSysMgr.update(ecModel, api);\n    doVisualEncoding.call(this, ecModel, payload);\n    doRender.call(this, ecModel, payload); // Set background\n\n    var backgroundColor = ecModel.get('backgroundColor') || 'transparent';\n    var painter = zr.painter; // TODO all use clearColor ?\n\n    if (painter.isSingleCanvas && painter.isSingleCanvas()) {\n      zr.configLayer(0, {\n        clearColor: backgroundColor\n      });\n    } else {\n      // In IE8\n      if (!env.canvasSupported) {\n        var colorArr = colorTool.parse(backgroundColor);\n        backgroundColor = colorTool.stringify(colorArr, 'rgb');\n\n        if (colorArr[3] === 0) {\n          backgroundColor = 'transparent';\n        }\n      }\n\n      if (backgroundColor.colorStops || backgroundColor.image) {\n        // Gradient background\n        // FIXME Fixed layer？\n        zr.configLayer(0, {\n          clearColor: backgroundColor\n        });\n        this[HAS_GRADIENT_OR_PATTERN_BG] = true;\n        this._dom.style.background = 'transparent';\n      } else {\n        if (this[HAS_GRADIENT_OR_PATTERN_BG]) {\n          zr.configLayer(0, {\n            clearColor: null\n          });\n        }\n\n        this[HAS_GRADIENT_OR_PATTERN_BG] = false;\n        this._dom.style.background = backgroundColor;\n      }\n    }\n\n    each(postUpdateFuncs, function (func) {\n      func(ecModel, api);\n    }); // console.profile && console.profileEnd('update');\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateView: function (payload) {\n    var ecModel = this._model; // update before setOption\n\n    if (!ecModel) {\n      return;\n    }\n\n    ecModel.eachSeries(function (seriesModel) {\n      seriesModel.getData().clearAllVisual();\n    });\n    doVisualEncoding.call(this, ecModel, payload);\n    invokeUpdateMethod.call(this, 'updateView', ecModel, payload);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateVisual: function (payload) {\n    var ecModel = this._model; // update before setOption\n\n    if (!ecModel) {\n      return;\n    }\n\n    ecModel.eachSeries(function (seriesModel) {\n      seriesModel.getData().clearAllVisual();\n    });\n    doVisualEncoding.call(this, ecModel, payload, true);\n    invokeUpdateMethod.call(this, 'updateVisual', ecModel, payload);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateLayout: function (payload) {\n    var ecModel = this._model; // update before setOption\n\n    if (!ecModel) {\n      return;\n    }\n\n    doLayout.call(this, ecModel, payload);\n    invokeUpdateMethod.call(this, 'updateLayout', ecModel, payload);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  prepareAndUpdate: function (payload) {\n    var ecModel = this._model;\n    prepareView.call(this, 'component', ecModel);\n    prepareView.call(this, 'chart', ecModel);\n    updateMethods.update.call(this, payload);\n  }\n};\n/**\n * @private\n */\n\nfunction updateDirectly(ecIns, method, payload, mainType, subType) {\n  var ecModel = ecIns._model; // broadcast\n\n  if (!mainType) {\n    each(ecIns._componentsViews.concat(ecIns._chartsViews), callView);\n    return;\n  }\n\n  var query = {};\n  query[mainType + 'Id'] = payload[mainType + 'Id'];\n  query[mainType + 'Index'] = payload[mainType + 'Index'];\n  query[mainType + 'Name'] = payload[mainType + 'Name'];\n  var condition = {\n    mainType: mainType,\n    query: query\n  };\n  subType && (condition.subType = subType); // subType may be '' by parseClassType;\n  // If dispatchAction before setOption, do nothing.\n\n  ecModel && ecModel.eachComponent(condition, function (model, index) {\n    callView(ecIns[mainType === 'series' ? '_chartsMap' : '_componentsMap'][model.__viewId]);\n  }, ecIns);\n\n  function callView(view) {\n    view && view.__alive && view[method] && view[method](view.__model, ecModel, ecIns._api, payload);\n  }\n}\n/**\n * Resize the chart\n * @param {Object} opts\n * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n * @param {boolean} [opts.silent=false]\n */\n\n\nechartsProto.resize = function (opts) {\n  this[IN_MAIN_PROCESS] = true;\n\n  this._zr.resize(opts);\n\n  var optionChanged = this._model && this._model.resetOption('media');\n\n  var updateMethod = optionChanged ? 'prepareAndUpdate' : 'update';\n  updateMethods[updateMethod].call(this); // Resize loading effect\n\n  this._loadingFX && this._loadingFX.resize();\n  this[IN_MAIN_PROCESS] = false;\n  var silent = opts && opts.silent;\n  flushPendingActions.call(this, silent);\n  triggerUpdatedEvent.call(this, silent);\n};\n/**\n * Show loading effect\n * @param  {string} [name='default']\n * @param  {Object} [cfg]\n */\n\n\nechartsProto.showLoading = function (name, cfg) {\n  if (zrUtil.isObject(name)) {\n    cfg = name;\n    name = '';\n  }\n\n  name = name || 'default';\n  this.hideLoading();\n\n  if (!loadingEffects[name]) {\n    return;\n  }\n\n  var el = loadingEffects[name](this._api, cfg);\n  var zr = this._zr;\n  this._loadingFX = el;\n  zr.add(el);\n};\n/**\n * Hide loading effect\n */\n\n\nechartsProto.hideLoading = function () {\n  this._loadingFX && this._zr.remove(this._loadingFX);\n  this._loadingFX = null;\n};\n/**\n * @param {Object} eventObj\n * @return {Object}\n */\n\n\nechartsProto.makeActionFromEvent = function (eventObj) {\n  var payload = zrUtil.extend({}, eventObj);\n  payload.type = eventActionMap[eventObj.type];\n  return payload;\n};\n/**\n * @pubilc\n * @param {Object} payload\n * @param {string} [payload.type] Action type\n * @param {Object|boolean} [opt] If pass boolean, means opt.silent\n * @param {boolean} [opt.silent=false] Whether trigger events.\n * @param {boolean} [opt.flush=undefined]\n *                  true: Flush immediately, and then pixel in canvas can be fetched\n *                      immediately. Caution: it might affect performance.\n *                  false: Not not flush.\n *                  undefined: Auto decide whether perform flush.\n */\n\n\nechartsProto.dispatchAction = function (payload, opt) {\n  if (!zrUtil.isObject(opt)) {\n    opt = {\n      silent: !!opt\n    };\n  }\n\n  if (!actions[payload.type]) {\n    return;\n  } // Avoid dispatch action before setOption. Especially in `connect`.\n\n\n  if (!this._model) {\n    return;\n  } // May dispatchAction in rendering procedure\n\n\n  if (this[IN_MAIN_PROCESS]) {\n    this._pendingActions.push(payload);\n\n    return;\n  }\n\n  doDispatchAction.call(this, payload, opt.silent);\n\n  if (opt.flush) {\n    this._zr.flush(true);\n  } else if (opt.flush !== false && env.browser.weChat) {\n    // In WeChat embeded browser, `requestAnimationFrame` and `setInterval`\n    // hang when sliding page (on touch event), which cause that zr does not\n    // refresh util user interaction finished, which is not expected.\n    // But `dispatchAction` may be called too frequently when pan on touch\n    // screen, which impacts performance if do not throttle them.\n    this._throttledZrFlush();\n  }\n\n  flushPendingActions.call(this, opt.silent);\n  triggerUpdatedEvent.call(this, opt.silent);\n};\n\nfunction doDispatchAction(payload, silent) {\n  var payloadType = payload.type;\n  var escapeConnect = payload.escapeConnect;\n  var actionWrap = actions[payloadType];\n  var actionInfo = actionWrap.actionInfo;\n  var cptType = (actionInfo.update || 'update').split(':');\n  var updateMethod = cptType.pop();\n  cptType = cptType[0] != null && parseClassType(cptType[0]);\n  this[IN_MAIN_PROCESS] = true;\n  var payloads = [payload];\n  var batched = false; // Batch action\n\n  if (payload.batch) {\n    batched = true;\n    payloads = zrUtil.map(payload.batch, function (item) {\n      item = zrUtil.defaults(zrUtil.extend({}, item), payload);\n      item.batch = null;\n      return item;\n    });\n  }\n\n  var eventObjBatch = [];\n  var eventObj;\n  var isHighDown = payloadType === 'highlight' || payloadType === 'downplay';\n  each(payloads, function (batchItem) {\n    // Action can specify the event by return it.\n    eventObj = actionWrap.action(batchItem, this._model, this._api); // Emit event outside\n\n    eventObj = eventObj || zrUtil.extend({}, batchItem); // Convert type to eventType\n\n    eventObj.type = actionInfo.event || eventObj.type;\n    eventObjBatch.push(eventObj); // light update does not perform data process, layout and visual.\n\n    if (isHighDown) {\n      // method, payload, mainType, subType\n      updateDirectly(this, updateMethod, batchItem, 'series');\n    } else if (cptType) {\n      updateDirectly(this, updateMethod, batchItem, cptType.main, cptType.sub);\n    }\n  }, this);\n\n  if (updateMethod !== 'none' && !isHighDown && !cptType) {\n    // Still dirty\n    if (this[OPTION_UPDATED]) {\n      // FIXME Pass payload ?\n      updateMethods.prepareAndUpdate.call(this, payload);\n      this[OPTION_UPDATED] = false;\n    } else {\n      updateMethods[updateMethod].call(this, payload);\n    }\n  } // Follow the rule of action batch\n\n\n  if (batched) {\n    eventObj = {\n      type: actionInfo.event || payloadType,\n      escapeConnect: escapeConnect,\n      batch: eventObjBatch\n    };\n  } else {\n    eventObj = eventObjBatch[0];\n  }\n\n  this[IN_MAIN_PROCESS] = false;\n  !silent && this._messageCenter.trigger(eventObj.type, eventObj);\n}\n\nfunction flushPendingActions(silent) {\n  var pendingActions = this._pendingActions;\n\n  while (pendingActions.length) {\n    var payload = pendingActions.shift();\n    doDispatchAction.call(this, payload, silent);\n  }\n}\n\nfunction triggerUpdatedEvent(silent) {\n  !silent && this.trigger('updated');\n}\n/**\n * Register event\n * @method\n */\n\n\nechartsProto.on = createRegisterEventWithLowercaseName('on');\nechartsProto.off = createRegisterEventWithLowercaseName('off');\nechartsProto.one = createRegisterEventWithLowercaseName('one');\n/**\n * @param {string} methodName\n * @private\n */\n\nfunction invokeUpdateMethod(methodName, ecModel, payload) {\n  var api = this._api; // Update all components\n\n  each(this._componentsViews, function (component) {\n    var componentModel = component.__model;\n    component[methodName](componentModel, ecModel, api, payload);\n    updateZ(componentModel, component);\n  }, this); // Upate all charts\n\n  ecModel.eachSeries(function (seriesModel, idx) {\n    var chart = this._chartsMap[seriesModel.__viewId];\n    chart[methodName](seriesModel, ecModel, api, payload);\n    updateZ(seriesModel, chart);\n    updateProgressiveAndBlend(seriesModel, chart);\n  }, this); // If use hover layer\n\n  updateHoverLayerStatus(this._zr, ecModel); // Post render\n\n  each(postUpdateFuncs, function (func) {\n    func(ecModel, api);\n  });\n}\n/**\n * Prepare view instances of charts and components\n * @param  {module:echarts/model/Global} ecModel\n * @private\n */\n\n\nfunction prepareView(type, ecModel) {\n  var isComponent = type === 'component';\n  var viewList = isComponent ? this._componentsViews : this._chartsViews;\n  var viewMap = isComponent ? this._componentsMap : this._chartsMap;\n  var zr = this._zr;\n\n  for (var i = 0; i < viewList.length; i++) {\n    viewList[i].__alive = false;\n  }\n\n  ecModel[isComponent ? 'eachComponent' : 'eachSeries'](function (componentType, model) {\n    if (isComponent) {\n      if (componentType === 'series') {\n        return;\n      }\n    } else {\n      model = componentType;\n    } // Consider: id same and type changed.\n\n\n    var viewId = '_ec_' + model.id + '_' + model.type;\n    var view = viewMap[viewId];\n\n    if (!view) {\n      var classType = parseClassType(model.type);\n      var Clazz = isComponent ? ComponentView.getClass(classType.main, classType.sub) : ChartView.getClass(classType.sub);\n\n      if (Clazz) {\n        view = new Clazz();\n        view.init(ecModel, this._api);\n        viewMap[viewId] = view;\n        viewList.push(view);\n        zr.add(view.group);\n      } else {\n        // Error\n        return;\n      }\n    }\n\n    model.__viewId = view.__id = viewId;\n    view.__alive = true;\n    view.__model = model;\n    view.group.__ecComponentInfo = {\n      mainType: model.mainType,\n      index: model.componentIndex\n    };\n  }, this);\n\n  for (var i = 0; i < viewList.length;) {\n    var view = viewList[i];\n\n    if (!view.__alive) {\n      zr.remove(view.group);\n      view.dispose(ecModel, this._api);\n      viewList.splice(i, 1);\n      delete viewMap[view.__id];\n      view.__id = view.group.__ecComponentInfo = null;\n    } else {\n      i++;\n    }\n  }\n}\n/**\n * Processor data in each series\n *\n * @param {module:echarts/model/Global} ecModel\n * @private\n */\n\n\nfunction processData(ecModel, api) {\n  each(dataProcessorFuncs, function (process) {\n    process.func(ecModel, api);\n  });\n}\n/**\n * @private\n */\n\n\nfunction stackSeriesData(ecModel) {\n  var stackedDataMap = {};\n  ecModel.eachSeries(function (series) {\n    var stack = series.get('stack');\n    var data = series.getData();\n\n    if (stack && data.type === 'list') {\n      var previousStack = stackedDataMap[stack]; // Avoid conflict with Object.prototype\n\n      if (stackedDataMap.hasOwnProperty(stack) && previousStack) {\n        data.stackedOn = previousStack;\n      }\n\n      stackedDataMap[stack] = data;\n    }\n  });\n}\n/**\n * Layout before each chart render there series, special visual encoding stage\n *\n * @param {module:echarts/model/Global} ecModel\n * @private\n */\n\n\nfunction doLayout(ecModel, payload) {\n  var api = this._api;\n  each(visualFuncs, function (visual) {\n    if (visual.isLayout) {\n      visual.func(ecModel, api, payload);\n    }\n  });\n}\n/**\n * Encode visual infomation from data after data processing\n *\n * @param {module:echarts/model/Global} ecModel\n * @param {object} layout\n * @param {boolean} [excludesLayout]\n * @private\n */\n\n\nfunction doVisualEncoding(ecModel, payload, excludesLayout) {\n  var api = this._api;\n  ecModel.clearColorPalette();\n  ecModel.eachSeries(function (seriesModel) {\n    seriesModel.clearColorPalette();\n  });\n  each(visualFuncs, function (visual) {\n    (!excludesLayout || !visual.isLayout) && visual.func(ecModel, api, payload);\n  });\n}\n/**\n * Render each chart and component\n * @private\n */\n\n\nfunction doRender(ecModel, payload) {\n  var api = this._api; // Render all components\n\n  each(this._componentsViews, function (componentView) {\n    var componentModel = componentView.__model;\n    componentView.render(componentModel, ecModel, api, payload);\n    updateZ(componentModel, componentView);\n  }, this);\n  each(this._chartsViews, function (chart) {\n    chart.__alive = false;\n  }, this); // Render all charts\n\n  ecModel.eachSeries(function (seriesModel, idx) {\n    var chartView = this._chartsMap[seriesModel.__viewId];\n    chartView.__alive = true;\n    chartView.render(seriesModel, ecModel, api, payload);\n    chartView.group.silent = !!seriesModel.get('silent');\n    updateZ(seriesModel, chartView);\n    updateProgressiveAndBlend(seriesModel, chartView);\n  }, this); // If use hover layer\n\n  updateHoverLayerStatus(this._zr, ecModel); // Remove groups of unrendered charts\n\n  each(this._chartsViews, function (chart) {\n    if (!chart.__alive) {\n      chart.remove(ecModel, api);\n    }\n  }, this);\n}\n\nvar MOUSE_EVENT_NAMES = ['click', 'dblclick', 'mouseover', 'mouseout', 'mousemove', 'mousedown', 'mouseup', 'globalout', 'contextmenu'];\n/**\n * @private\n */\n\nechartsProto._initEvents = function () {\n  each(MOUSE_EVENT_NAMES, function (eveName) {\n    this._zr.on(eveName, function (e) {\n      var ecModel = this.getModel();\n      var el = e.target;\n      var params; // no e.target when 'globalout'.\n\n      if (eveName === 'globalout') {\n        params = {};\n      } else if (el && el.dataIndex != null) {\n        var dataModel = el.dataModel || ecModel.getSeriesByIndex(el.seriesIndex);\n        params = dataModel && dataModel.getDataParams(el.dataIndex, el.dataType) || {};\n      } // If element has custom eventData of components\n      else if (el && el.eventData) {\n          params = zrUtil.extend({}, el.eventData);\n        }\n\n      if (params) {\n        params.event = e;\n        params.type = eveName;\n        this.trigger(eveName, params);\n      }\n    }, this);\n  }, this);\n  each(eventActionMap, function (actionType, eventType) {\n    this._messageCenter.on(eventType, function (event) {\n      this.trigger(eventType, event);\n    }, this);\n  }, this);\n};\n/**\n * @return {boolean}\n */\n\n\nechartsProto.isDisposed = function () {\n  return this._disposed;\n};\n/**\n * Clear\n */\n\n\nechartsProto.clear = function () {\n  this.setOption({\n    series: []\n  }, true);\n};\n/**\n * Dispose instance\n */\n\n\nechartsProto.dispose = function () {\n  if (this._disposed) {\n    return;\n  }\n\n  this._disposed = true;\n  var api = this._api;\n  var ecModel = this._model;\n  each(this._componentsViews, function (component) {\n    component.dispose(ecModel, api);\n  });\n  each(this._chartsViews, function (chart) {\n    chart.dispose(ecModel, api);\n  }); // Dispose after all views disposed\n\n  this._zr.dispose();\n\n  delete instances[this.id];\n};\n\nzrUtil.mixin(ECharts, Eventful);\n\nfunction updateHoverLayerStatus(zr, ecModel) {\n  var storage = zr.storage;\n  var elCount = 0;\n  storage.traverse(function (el) {\n    if (!el.isGroup) {\n      elCount++;\n    }\n  });\n\n  if (elCount > ecModel.get('hoverLayerThreshold') && !env.node) {\n    storage.traverse(function (el) {\n      if (!el.isGroup) {\n        el.useHoverLayer = true;\n      }\n    });\n  }\n}\n/**\n * Update chart progressive and blend.\n * @param {module:echarts/model/Series|module:echarts/model/Component} model\n * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n */\n\n\nfunction updateProgressiveAndBlend(seriesModel, chartView) {\n  // Progressive configuration\n  var elCount = 0;\n  chartView.group.traverse(function (el) {\n    if (el.type !== 'group' && !el.ignore) {\n      elCount++;\n    }\n  });\n  var frameDrawNum = +seriesModel.get('progressive');\n  var needProgressive = elCount > seriesModel.get('progressiveThreshold') && frameDrawNum && !env.node;\n\n  if (needProgressive) {\n    chartView.group.traverse(function (el) {\n      // FIXME marker and other components\n      if (!el.isGroup) {\n        el.progressive = needProgressive ? Math.floor(elCount++ / frameDrawNum) : -1;\n\n        if (needProgressive) {\n          el.stopAnimation(true);\n        }\n      }\n    });\n  } // Blend configration\n\n\n  var blendMode = seriesModel.get('blendMode') || null;\n  chartView.group.traverse(function (el) {\n    // FIXME marker and other components\n    if (!el.isGroup) {\n      el.setStyle('blend', blendMode);\n    }\n  });\n}\n/**\n * @param {module:echarts/model/Series|module:echarts/model/Component} model\n * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n */\n\n\nfunction updateZ(model, view) {\n  var z = model.get('z');\n  var zlevel = model.get('zlevel'); // Set z and zlevel\n\n  view.group.traverse(function (el) {\n    if (el.type !== 'group') {\n      z != null && (el.z = z);\n      zlevel != null && (el.zlevel = zlevel);\n    }\n  });\n}\n\nfunction createExtensionAPI(ecInstance) {\n  var coordSysMgr = ecInstance._coordSysMgr;\n  return zrUtil.extend(new ExtensionAPI(ecInstance), {\n    // Inject methods\n    getCoordinateSystems: zrUtil.bind(coordSysMgr.getCoordinateSystems, coordSysMgr),\n    getComponentByElement: function (el) {\n      while (el) {\n        var modelInfo = el.__ecComponentInfo;\n\n        if (modelInfo != null) {\n          return ecInstance._model.getComponent(modelInfo.mainType, modelInfo.index);\n        }\n\n        el = el.parent;\n      }\n    }\n  });\n}\n/**\n * @type {Object} key: actionType.\n * @inner\n */\n\n\nvar actions = {};\n/**\n * Map eventType to actionType\n * @type {Object}\n */\n\nvar eventActionMap = {};\n/**\n * Data processor functions of each stage\n * @type {Array.<Object.<string, Function>>}\n * @inner\n */\n\nvar dataProcessorFuncs = [];\n/**\n * @type {Array.<Function>}\n * @inner\n */\n\nvar optionPreprocessorFuncs = [];\n/**\n * @type {Array.<Function>}\n * @inner\n */\n\nvar postUpdateFuncs = [];\n/**\n * Visual encoding functions of each stage\n * @type {Array.<Object.<string, Function>>}\n * @inner\n */\n\nvar visualFuncs = [];\n/**\n * Theme storage\n * @type {Object.<key, Object>}\n */\n\nvar themeStorage = {};\n/**\n * Loading effects\n */\n\nvar loadingEffects = {};\nvar instances = {};\nvar connectedGroups = {};\nvar idBase = new Date() - 0;\nvar groupIdBase = new Date() - 0;\nvar DOM_ATTRIBUTE_KEY = '_echarts_instance_';\nvar mapDataStores = {};\n\nfunction enableConnect(chart) {\n  var STATUS_PENDING = 0;\n  var STATUS_UPDATING = 1;\n  var STATUS_UPDATED = 2;\n  var STATUS_KEY = '__connectUpdateStatus';\n\n  function updateConnectedChartsStatus(charts, status) {\n    for (var i = 0; i < charts.length; i++) {\n      var otherChart = charts[i];\n      otherChart[STATUS_KEY] = status;\n    }\n  }\n\n  zrUtil.each(eventActionMap, function (actionType, eventType) {\n    chart._messageCenter.on(eventType, function (event) {\n      if (connectedGroups[chart.group] && chart[STATUS_KEY] !== STATUS_PENDING) {\n        if (event && event.escapeConnect) {\n          return;\n        }\n\n        var action = chart.makeActionFromEvent(event);\n        var otherCharts = [];\n        zrUtil.each(instances, function (otherChart) {\n          if (otherChart !== chart && otherChart.group === chart.group) {\n            otherCharts.push(otherChart);\n          }\n        });\n        updateConnectedChartsStatus(otherCharts, STATUS_PENDING);\n        each(otherCharts, function (otherChart) {\n          if (otherChart[STATUS_KEY] !== STATUS_UPDATING) {\n            otherChart.dispatchAction(action);\n          }\n        });\n        updateConnectedChartsStatus(otherCharts, STATUS_UPDATED);\n      }\n    });\n  });\n}\n/**\n * @param {HTMLElement} dom\n * @param {Object} [theme]\n * @param {Object} opts\n * @param {number} [opts.devicePixelRatio] Use window.devicePixelRatio by default\n * @param {string} [opts.renderer] Currently only 'canvas' is supported.\n * @param {number} [opts.width] Use clientWidth of the input `dom` by default.\n *                              Can be 'auto' (the same as null/undefined)\n * @param {number} [opts.height] Use clientHeight of the input `dom` by default.\n *                               Can be 'auto' (the same as null/undefined)\n */\n\n\nfunction init(dom, theme, opts) {\n  var existInstance = getInstanceByDom(dom);\n\n  if (existInstance) {\n    return existInstance;\n  }\n\n  var chart = new ECharts(dom, theme, opts);\n  chart.id = 'ec_' + idBase++;\n  instances[chart.id] = chart;\n\n  if (dom.setAttribute) {\n    dom.setAttribute(DOM_ATTRIBUTE_KEY, chart.id);\n  } else {\n    dom[DOM_ATTRIBUTE_KEY] = chart.id;\n  }\n\n  enableConnect(chart);\n  return chart;\n}\n/**\n * @return {string|Array.<module:echarts~ECharts>} groupId\n */\n\n\nfunction connect(groupId) {\n  // Is array of charts\n  if (zrUtil.isArray(groupId)) {\n    var charts = groupId;\n    groupId = null; // If any chart has group\n\n    zrUtil.each(charts, function (chart) {\n      if (chart.group != null) {\n        groupId = chart.group;\n      }\n    });\n    groupId = groupId || 'g_' + groupIdBase++;\n    zrUtil.each(charts, function (chart) {\n      chart.group = groupId;\n    });\n  }\n\n  connectedGroups[groupId] = true;\n  return groupId;\n}\n/**\n * @DEPRECATED\n * @return {string} groupId\n */\n\n\nfunction disConnect(groupId) {\n  connectedGroups[groupId] = false;\n}\n/**\n * @return {string} groupId\n */\n\n\nvar disconnect = disConnect;\n/**\n * Dispose a chart instance\n * @param  {module:echarts~ECharts|HTMLDomElement|string} chart\n */\n\nfunction dispose(chart) {\n  if (typeof chart === 'string') {\n    chart = instances[chart];\n  } else if (!(chart instanceof ECharts)) {\n    // Try to treat as dom\n    chart = getInstanceByDom(chart);\n  }\n\n  if (chart instanceof ECharts && !chart.isDisposed()) {\n    chart.dispose();\n  }\n}\n/**\n * @param  {HTMLElement} dom\n * @return {echarts~ECharts}\n */\n\n\nfunction getInstanceByDom(dom) {\n  var key;\n\n  if (dom.getAttribute) {\n    key = dom.getAttribute(DOM_ATTRIBUTE_KEY);\n  } else {\n    key = dom[DOM_ATTRIBUTE_KEY];\n  }\n\n  return instances[key];\n}\n/**\n * @param {string} key\n * @return {echarts~ECharts}\n */\n\n\nfunction getInstanceById(key) {\n  return instances[key];\n}\n/**\n * Register theme\n */\n\n\nfunction registerTheme(name, theme) {\n  themeStorage[name] = theme;\n}\n/**\n * Register option preprocessor\n * @param {Function} preprocessorFunc\n */\n\n\nfunction registerPreprocessor(preprocessorFunc) {\n  optionPreprocessorFuncs.push(preprocessorFunc);\n}\n/**\n * @param {number} [priority=1000]\n * @param {Function} processorFunc\n */\n\n\nfunction registerProcessor(priority, processorFunc) {\n  if (typeof priority === 'function') {\n    processorFunc = priority;\n    priority = PRIORITY_PROCESSOR_FILTER;\n  }\n\n  dataProcessorFuncs.push({\n    prio: priority,\n    func: processorFunc\n  });\n}\n/**\n * Register postUpdater\n * @param {Function} postUpdateFunc\n */\n\n\nfunction registerPostUpdate(postUpdateFunc) {\n  postUpdateFuncs.push(postUpdateFunc);\n}\n/**\n * Usage:\n * registerAction('someAction', 'someEvent', function () { ... });\n * registerAction('someAction', function () { ... });\n * registerAction(\n *     {type: 'someAction', event: 'someEvent', update: 'updateView'},\n *     function () { ... }\n * );\n *\n * @param {(string|Object)} actionInfo\n * @param {string} actionInfo.type\n * @param {string} [actionInfo.event]\n * @param {string} [actionInfo.update]\n * @param {string} [eventName]\n * @param {Function} action\n */\n\n\nfunction registerAction(actionInfo, eventName, action) {\n  if (typeof eventName === 'function') {\n    action = eventName;\n    eventName = '';\n  }\n\n  var actionType = zrUtil.isObject(actionInfo) ? actionInfo.type : [actionInfo, actionInfo = {\n    event: eventName\n  }][0]; // Event name is all lowercase\n\n  actionInfo.event = (actionInfo.event || actionType).toLowerCase();\n  eventName = actionInfo.event; // Validate action type and event name.\n\n  zrUtil.assert(ACTION_REG.test(actionType) && ACTION_REG.test(eventName));\n\n  if (!actions[actionType]) {\n    actions[actionType] = {\n      action: action,\n      actionInfo: actionInfo\n    };\n  }\n\n  eventActionMap[eventName] = actionType;\n}\n/**\n * @param {string} type\n * @param {*} CoordinateSystem\n */\n\n\nfunction registerCoordinateSystem(type, CoordinateSystem) {\n  CoordinateSystemManager.register(type, CoordinateSystem);\n}\n/**\n * Get dimensions of specified coordinate system.\n * @param {string} type\n * @return {Array.<string|Object>}\n */\n\n\nfunction getCoordinateSystemDimensions(type) {\n  var coordSysCreator = CoordinateSystemManager.get(type);\n\n  if (coordSysCreator) {\n    return coordSysCreator.getDimensionsInfo ? coordSysCreator.getDimensionsInfo() : coordSysCreator.dimensions.slice();\n  }\n}\n/**\n * Layout is a special stage of visual encoding\n * Most visual encoding like color are common for different chart\n * But each chart has it's own layout algorithm\n *\n * @param {number} [priority=1000]\n * @param {Function} layoutFunc\n */\n\n\nfunction registerLayout(priority, layoutFunc) {\n  if (typeof priority === 'function') {\n    layoutFunc = priority;\n    priority = PRIORITY_VISUAL_LAYOUT;\n  }\n\n  visualFuncs.push({\n    prio: priority,\n    func: layoutFunc,\n    isLayout: true\n  });\n}\n/**\n * @param {number} [priority=3000]\n * @param {Function} visualFunc\n */\n\n\nfunction registerVisual(priority, visualFunc) {\n  if (typeof priority === 'function') {\n    visualFunc = priority;\n    priority = PRIORITY_VISUAL_CHART;\n  }\n\n  visualFuncs.push({\n    prio: priority,\n    func: visualFunc\n  });\n}\n/**\n * @param {string} name\n */\n\n\nfunction registerLoading(name, loadingFx) {\n  loadingEffects[name] = loadingFx;\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendComponentModel(opts\n/*, superClass*/\n) {\n  // var Clazz = ComponentModel;\n  // if (superClass) {\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n  // }\n  return ComponentModel.extend(opts);\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendComponentView(opts\n/*, superClass*/\n) {\n  // var Clazz = ComponentView;\n  // if (superClass) {\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ComponentView.getClass(classType.main, classType.sub, true);\n  // }\n  return ComponentView.extend(opts);\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendSeriesModel(opts\n/*, superClass*/\n) {\n  // var Clazz = SeriesModel;\n  // if (superClass) {\n  //     superClass = 'series.' + superClass.replace('series.', '');\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n  // }\n  return SeriesModel.extend(opts);\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendChartView(opts\n/*, superClass*/\n) {\n  // var Clazz = ChartView;\n  // if (superClass) {\n  //     superClass = superClass.replace('series.', '');\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ChartView.getClass(classType.main, true);\n  // }\n  return ChartView.extend(opts);\n}\n/**\n * ZRender need a canvas context to do measureText.\n * But in node environment canvas may be created by node-canvas.\n * So we need to specify how to create a canvas instead of using document.createElement('canvas')\n *\n * Be careful of using it in the browser.\n *\n * @param {Function} creator\n * @example\n *     var Canvas = require('canvas');\n *     var echarts = require('echarts');\n *     echarts.setCanvasCreator(function () {\n *         // Small size is enough.\n *         return new Canvas(32, 32);\n *     });\n */\n\n\nfunction setCanvasCreator(creator) {\n  zrUtil.$override('createCanvas', creator);\n}\n/**\n * @param {string} mapName\n * @param {Object|string} geoJson\n * @param {Object} [specialAreas]\n *\n * @example\n *     $.get('USA.json', function (geoJson) {\n *         echarts.registerMap('USA', geoJson);\n *         // Or\n *         echarts.registerMap('USA', {\n *             geoJson: geoJson,\n *             specialAreas: {}\n *         })\n *     });\n */\n\n\nfunction registerMap(mapName, geoJson, specialAreas) {\n  if (geoJson.geoJson && !geoJson.features) {\n    specialAreas = geoJson.specialAreas;\n    geoJson = geoJson.geoJson;\n  }\n\n  if (typeof geoJson === 'string') {\n    geoJson = typeof JSON !== 'undefined' && JSON.parse ? JSON.parse(geoJson) : new Function('return (' + geoJson + ');')();\n  }\n\n  mapDataStores[mapName] = {\n    geoJson: geoJson,\n    specialAreas: specialAreas\n  };\n}\n/**\n * @param {string} mapName\n * @return {Object}\n */\n\n\nfunction getMap(mapName) {\n  return mapDataStores[mapName];\n}\n\nregisterVisual(PRIORITY_VISUAL_GLOBAL, seriesColor);\nregisterPreprocessor(backwardCompat);\nregisterLoading('default', loadingDefault); // Default actions\n\nregisterAction({\n  type: 'highlight',\n  event: 'highlight',\n  update: 'highlight'\n}, zrUtil.noop);\nregisterAction({\n  type: 'downplay',\n  event: 'downplay',\n  update: 'downplay'\n}, zrUtil.noop); // For backward compatibility, where the namespace `dataTool` will\n// be mounted on `echarts` is the extension `dataTool` is imported.\n\nvar dataTool = {};\nexports.version = version;\nexports.dependencies = dependencies;\nexports.PRIORITY = PRIORITY;\nexports.init = init;\nexports.connect = connect;\nexports.disConnect = disConnect;\nexports.disconnect = disconnect;\nexports.dispose = dispose;\nexports.getInstanceByDom = getInstanceByDom;\nexports.getInstanceById = getInstanceById;\nexports.registerTheme = registerTheme;\nexports.registerPreprocessor = registerPreprocessor;\nexports.registerProcessor = registerProcessor;\nexports.registerPostUpdate = registerPostUpdate;\nexports.registerAction = registerAction;\nexports.registerCoordinateSystem = registerCoordinateSystem;\nexports.getCoordinateSystemDimensions = getCoordinateSystemDimensions;\nexports.registerLayout = registerLayout;\nexports.registerVisual = registerVisual;\nexports.registerLoading = registerLoading;\nexports.extendComponentModel = extendComponentModel;\nexports.extendComponentView = extendComponentView;\nexports.extendSeriesModel = extendSeriesModel;\nexports.extendChartView = extendChartView;\nexports.setCanvasCreator = setCanvasCreator;\nexports.registerMap = registerMap;\nexports.getMap = getMap;\nexports.dataTool = dataTool;\nvar ___ec_export = require(\"./export\");\n(function () {\n    for (var key in ___ec_export) {\n        if (___ec_export.hasOwnProperty(key)) {\n            exports[key] = ___ec_export[key];\n        }\n    }\n})();",
    "var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nrequire(\"./line/LineSeries\");\n\nrequire(\"./line/LineView\");\n\nvar visualSymbol = require(\"../visual/symbol\");\n\nvar layoutPoints = require(\"../layout/points\");\n\nvar dataSample = require(\"../processor/dataSample\");\n\nrequire(\"../component/gridSimple\");\n\n// In case developer forget to include grid component\necharts.registerVisual(zrUtil.curry(visualSymbol, 'line', 'circle', 'line'));\necharts.registerLayout(zrUtil.curry(layoutPoints, 'line')); // Down sample after filter\n\necharts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, zrUtil.curry(dataSample, 'line'));",
    "var echarts = require(\"../echarts\");\n\nrequire(\"./axisPointer\");\n\nrequire(\"./tooltip/TooltipModel\");\n\nrequire(\"./tooltip/TooltipView\");\n\n// FIXME Better way to pack data in graphic element\n\n/**\n * @action\n * @property {string} type\n * @property {number} seriesIndex\n * @property {number} dataIndex\n * @property {number} [x]\n * @property {number} [y]\n */\necharts.registerAction({\n  type: 'showTip',\n  event: 'showTip',\n  update: 'tooltip:manuallyShowTip'\n}, // noop\nfunction () {});\necharts.registerAction({\n  type: 'hideTip',\n  event: 'hideTip',\n  update: 'tooltip:manuallyHideTip'\n}, // noop\nfunction () {});",
    "var echarts = require(\"../echarts\");\n\nvar graphic = require(\"../util/graphic\");\n\nvar _layout = require(\"../util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\n// Model\necharts.extendComponentModel({\n  type: 'title',\n  layoutMode: {\n    type: 'box',\n    ignoreSize: true\n  },\n  defaultOption: {\n    // 一级层叠\n    zlevel: 0,\n    // 二级层叠\n    z: 6,\n    show: true,\n    text: '',\n    // 超链接跳转\n    // link: null,\n    // 仅支持self | blank\n    target: 'blank',\n    subtext: '',\n    // 超链接跳转\n    // sublink: null,\n    // 仅支持self | blank\n    subtarget: 'blank',\n    // 'center' ¦ 'left' ¦ 'right'\n    // ¦ {number}（x坐标，单位px）\n    left: 0,\n    // 'top' ¦ 'bottom' ¦ 'center'\n    // ¦ {number}（y坐标，单位px）\n    top: 0,\n    // 水平对齐\n    // 'auto' | 'left' | 'right' | 'center'\n    // 默认根据 left 的位置判断是左对齐还是右对齐\n    // textAlign: null\n    //\n    // 垂直对齐\n    // 'auto' | 'top' | 'bottom' | 'middle'\n    // 默认根据 top 位置判断是上对齐还是下对齐\n    // textBaseline: null\n    backgroundColor: 'rgba(0,0,0,0)',\n    // 标题边框颜色\n    borderColor: '#ccc',\n    // 标题边框线宽，单位px，默认为0（无边框）\n    borderWidth: 0,\n    // 标题内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    padding: 5,\n    // 主副标题纵向间隔，单位px，默认为10，\n    itemGap: 10,\n    textStyle: {\n      fontSize: 18,\n      fontWeight: 'bolder',\n      color: '#333'\n    },\n    subtextStyle: {\n      color: '#aaa'\n    }\n  }\n}); // View\n\necharts.extendComponentView({\n  type: 'title',\n  render: function (titleModel, ecModel, api) {\n    this.group.removeAll();\n\n    if (!titleModel.get('show')) {\n      return;\n    }\n\n    var group = this.group;\n    var textStyleModel = titleModel.getModel('textStyle');\n    var subtextStyleModel = titleModel.getModel('subtextStyle');\n    var textAlign = titleModel.get('textAlign');\n    var textBaseline = titleModel.get('textBaseline');\n    var textEl = new graphic.Text({\n      style: graphic.setTextStyle({}, textStyleModel, {\n        text: titleModel.get('text'),\n        textFill: textStyleModel.getTextColor()\n      }, {\n        disableBox: true\n      }),\n      z2: 10\n    });\n    var textRect = textEl.getBoundingRect();\n    var subText = titleModel.get('subtext');\n    var subTextEl = new graphic.Text({\n      style: graphic.setTextStyle({}, subtextStyleModel, {\n        text: subText,\n        textFill: subtextStyleModel.getTextColor(),\n        y: textRect.height + titleModel.get('itemGap'),\n        textVerticalAlign: 'top'\n      }, {\n        disableBox: true\n      }),\n      z2: 10\n    });\n    var link = titleModel.get('link');\n    var sublink = titleModel.get('sublink');\n    textEl.silent = !link;\n    subTextEl.silent = !sublink;\n\n    if (link) {\n      textEl.on('click', function () {\n        window.open(link, '_' + titleModel.get('target'));\n      });\n    }\n\n    if (sublink) {\n      subTextEl.on('click', function () {\n        window.open(sublink, '_' + titleModel.get('subtarget'));\n      });\n    }\n\n    group.add(textEl);\n    subText && group.add(subTextEl); // If no subText, but add subTextEl, there will be an empty line.\n\n    var groupRect = group.getBoundingRect();\n    var layoutOption = titleModel.getBoxLayoutParams();\n    layoutOption.width = groupRect.width;\n    layoutOption.height = groupRect.height;\n    var layoutRect = getLayoutRect(layoutOption, {\n      width: api.getWidth(),\n      height: api.getHeight()\n    }, titleModel.get('padding')); // Adjust text align based on position\n\n    if (!textAlign) {\n      // Align left if title is on the left. center and right is same\n      textAlign = titleModel.get('left') || titleModel.get('right');\n\n      if (textAlign === 'middle') {\n        textAlign = 'center';\n      } // Adjust layout by text align\n\n\n      if (textAlign === 'right') {\n        layoutRect.x += layoutRect.width;\n      } else if (textAlign === 'center') {\n        layoutRect.x += layoutRect.width / 2;\n      }\n    }\n\n    if (!textBaseline) {\n      textBaseline = titleModel.get('top') || titleModel.get('bottom');\n\n      if (textBaseline === 'center') {\n        textBaseline = 'middle';\n      }\n\n      if (textBaseline === 'bottom') {\n        layoutRect.y += layoutRect.height;\n      } else if (textBaseline === 'middle') {\n        layoutRect.y += layoutRect.height / 2;\n      }\n\n      textBaseline = textBaseline || 'top';\n    }\n\n    group.attr('position', [layoutRect.x, layoutRect.y]);\n    var alignStyle = {\n      textAlign: textAlign,\n      textVerticalAlign: textBaseline\n    };\n    textEl.setStyle(alignStyle);\n    subTextEl.setStyle(alignStyle); // Render background\n    // Get groupRect again because textAlign has been changed\n\n    groupRect = group.getBoundingRect();\n    var padding = layoutRect.margin;\n    var style = titleModel.getItemStyle(['color', 'opacity']);\n    style.fill = titleModel.get('backgroundColor');\n    var rect = new graphic.Rect({\n      shape: {\n        x: groupRect.x - padding[3],\n        y: groupRect.y - padding[0],\n        width: groupRect.width + padding[1] + padding[3],\n        height: groupRect.height + padding[0] + padding[2],\n        r: titleModel.get('borderRadius')\n      },\n      style: style,\n      silent: true\n    });\n    graphic.subPixelOptimizeRect(rect);\n    group.add(rect);\n  }\n});",
    "require(\"./toolbox/ToolboxModel\");\n\nrequire(\"./toolbox/ToolboxView\");\n\nrequire(\"./toolbox/feature/SaveAsImage\");\n\nrequire(\"./toolbox/feature/MagicType\");\n\nrequire(\"./toolbox/feature/DataView\");\n\nrequire(\"./toolbox/feature/DataZoom\");\n\nrequire(\"./toolbox/feature/Restore\");",
    "// 引入 echarts 主模块。\r\nimport * as echarts from 'echarts/lib/echarts';\r\n// 引入折线图。\r\nimport 'echarts/lib/chart/line';\r\n// 引入提示框组件、标题组件、工具箱组件。\r\nimport 'echarts/lib/component/tooltip';\r\nimport 'echarts/lib/component/title';\r\nimport 'echarts/lib/component/toolbox';\r\n\r\n// 基于准备好的dom，初始化 echarts 实例并绘制图表。\r\necharts.init(document.getElementById('main')).setOption({\r\n    title: {text: 'Line Chart'},\r\n    tooltip: {},\r\n    toolbox: {\r\n        feature: {\r\n            dataView: {},\r\n            saveAsImage: {\r\n                pixelRatio: 2\r\n            },\r\n            restore: {}\r\n        }\r\n    },\r\n    xAxis: {},\r\n    yAxis: {},\r\n    series: [{\r\n        type: 'line',\r\n        smooth: true,\r\n        data: [[12, 5], [24, 20], [36, 36], [48, 10], [60, 10], [72, 20]]\r\n    }]\r\n});\r\n"
  ],
  "names": [
    "createRegisterEventWithLowercaseName",
    "method",
    "eventName",
    "handler",
    "context",
    "toLowerCase",
    "Eventful",
    "prototype",
    "call",
    "this",
    "MessageCenter",
    "ECharts",
    "dom",
    "theme",
    "opts",
    "prioritySortFunc",
    "a",
    "b",
    "prio",
    "themeStorage",
    "id",
    "group",
    "_dom",
    "zr",
    "_zr",
    "zrender",
    "init",
    "renderer",
    "devicePixelRatio",
    "width",
    "height",
    "_throttledZrFlush",
    "throttle",
    "zrUtil",
    "bind",
    "flush",
    "clone",
    "backwardCompat",
    "_theme",
    "_chartsViews",
    "_chartsMap",
    "_componentsViews",
    "_componentsMap",
    "_coordSysMgr",
    "CoordinateSystemManager",
    "_api",
    "ecInstance",
    "coordSysMgr",
    "extend",
    "ExtensionAPI",
    "getCoordinateSystems",
    "getComponentByElement",
    "el",
    "modelInfo",
    "__ecComponentInfo",
    "_model",
    "getComponent",
    "mainType",
    "index",
    "parent",
    "createExtensionAPI",
    "_messageCenter",
    "_initEvents",
    "resize",
    "_pendingActions",
    "timsort",
    "visualFuncs",
    "dataProcessorFuncs",
    "animation",
    "on",
    "_onframe",
    "setAsPrimitive",
    "doConvertPixel",
    "methodName",
    "finder",
    "value",
    "result",
    "ecModel",
    "coordSysList",
    "modelUtil",
    "parseFinder",
    "i",
    "length",
    "coordSys",
    "updateDirectly",
    "ecIns",
    "payload",
    "subType",
    "callView",
    "view",
    "__alive",
    "__model",
    "query",
    "condition",
    "eachComponent",
    "model",
    "__viewId",
    "each",
    "concat",
    "doDispatchAction",
    "silent",
    "payloadType",
    "type",
    "escapeConnect",
    "actionWrap",
    "actions",
    "actionInfo",
    "cptType",
    "update",
    "split",
    "updateMethod",
    "pop",
    "parseClassType",
    "IN_MAIN_PROCESS",
    "payloads",
    "batched",
    "batch",
    "map",
    "item",
    "defaults",
    "eventObj",
    "eventObjBatch",
    "isHighDown",
    "batchItem",
    "action",
    "event",
    "push",
    "main",
    "sub",
    "OPTION_UPDATED",
    "updateMethods",
    "prepareAndUpdate",
    "trigger",
    "flushPendingActions",
    "pendingActions",
    "shift",
    "triggerUpdatedEvent",
    "invokeUpdateMethod",
    "api",
    "component",
    "componentModel",
    "updateZ",
    "eachSeries",
    "seriesModel",
    "idx",
    "chart",
    "updateProgressiveAndBlend",
    "updateHoverLayerStatus",
    "postUpdateFuncs",
    "func",
    "prepareView",
    "isComponent",
    "viewList",
    "viewMap",
    "componentType",
    "viewId",
    "classType",
    "Clazz",
    "ComponentView",
    "getClass",
    "ChartView",
    "add",
    "__id",
    "componentIndex",
    "remove",
    "dispose",
    "splice",
    "doVisualEncoding",
    "excludesLayout",
    "clearColorPalette",
    "visual",
    "isLayout",
    "storage",
    "elCount",
    "traverse",
    "isGroup",
    "get",
    "env",
    "node",
    "useHoverLayer",
    "chartView",
    "ignore",
    "frameDrawNum",
    "needProgressive",
    "progressive",
    "Math",
    "floor",
    "stopAnimation",
    "blendMode",
    "setStyle",
    "z",
    "zlevel",
    "disConnect",
    "groupId",
    "connectedGroups",
    "getInstanceByDom",
    "key",
    "getAttribute",
    "DOM_ATTRIBUTE_KEY",
    "instances",
    "registerPreprocessor",
    "preprocessorFunc",
    "optionPreprocessorFuncs",
    "registerAction",
    "actionType",
    "isObject",
    "assert",
    "ACTION_REG",
    "test",
    "eventActionMap",
    "registerVisual",
    "priority",
    "visualFunc",
    "PRIORITY_VISUAL_CHART",
    "registerLoading",
    "name",
    "loadingFx",
    "loadingEffects",
    "require",
    "__DEV__",
    "colorTool",
    "GlobalModel",
    "OptionManager",
    "ComponentModel",
    "SeriesModel",
    "graphic",
    "seriesColor",
    "loadingDefault",
    "PRIORITY_PROCESSOR_FILTER",
    "PRIORITY_VISUAL_LAYOUT",
    "PRIORITY",
    "PROCESSOR",
    "FILTER",
    "STATISTIC",
    "VISUAL",
    "LAYOUT",
    "GLOBAL",
    "CHART",
    "COMPONENT",
    "BRUSH",
    "HAS_GRADIENT_OR_PATTERN_BG",
    "off",
    "one",
    "mixin",
    "echartsProto",
    "getDom",
    "getZr",
    "setOption",
    "option",
    "notMerge",
    "lazyUpdate",
    "optionManager",
    "setTheme",
    "console",
    "log",
    "getModel",
    "getOption",
    "getWidth",
    "getHeight",
    "getDevicePixelRatio",
    "painter",
    "dpr",
    "window",
    "getRenderedCanvas",
    "canvasSupported",
    "pixelRatio",
    "backgroundColor",
    "list",
    "getDisplayList",
    "getSvgDataUrl",
    "svgSupported",
    "pathToSvg",
    "getDataURL",
    "excludeComponents",
    "excludesComponentViews",
    "self",
    "url",
    "getType",
    "toDataURL",
    "getConnectedDataURL",
    "mathMin",
    "min",
    "mathMax",
    "max",
    "left",
    "Infinity",
    "top",
    "right",
    "bottom",
    "canvasList",
    "canvas",
    "boundingRect",
    "getBoundingClientRect",
    "targetCanvas",
    "createCanvas",
    "img",
    "Image",
    "style",
    "x",
    "y",
    "image",
    "refreshImmediately",
    "convertToPixel",
    "curry",
    "convertFromPixel",
    "containPixel",
    "models",
    "indexOf",
    "coordinateSystem",
    "containPoint",
    "getVisual",
    "visualType",
    "data",
    "defaultMainType",
    "getData",
    "dataIndexInside",
    "hasOwnProperty",
    "indexOfRawIndex",
    "dataIndex",
    "getItemVisual",
    "getViewOfComponentModel",
    "getViewOfSeriesModel",
    "restoreData",
    "create",
    "process",
    "stackedDataMap",
    "series",
    "stack",
    "previousStack",
    "stackedOn",
    "componentView",
    "render",
    "isSingleCanvas",
    "configLayer",
    "clearColor",
    "colorArr",
    "parse",
    "stringify",
    "colorStops",
    "background",
    "updateView",
    "clearAllVisual",
    "updateVisual",
    "updateLayout",
    "optionChanged",
    "resetOption",
    "_loadingFX",
    "showLoading",
    "cfg",
    "hideLoading",
    "makeActionFromEvent",
    "dispatchAction",
    "opt",
    "browser",
    "weChat",
    "MOUSE_EVENT_NAMES",
    "eveName",
    "e",
    "params",
    "target",
    "dataModel",
    "getSeriesByIndex",
    "seriesIndex",
    "getDataParams",
    "dataType",
    "eventData",
    "eventType",
    "isDisposed",
    "_disposed",
    "clear",
    "idBase",
    "Date",
    "groupIdBase",
    "mapDataStores",
    "disconnect",
    "noop",
    "exports",
    "version",
    "dependencies",
    "existInstance",
    "setAttribute",
    "updateConnectedChartsStatus",
    "charts",
    "status",
    "STATUS_KEY",
    "otherCharts",
    "otherChart",
    "enableConnect",
    "connect",
    "isArray",
    "getInstanceById",
    "registerTheme",
    "registerProcessor",
    "processorFunc",
    "registerPostUpdate",
    "postUpdateFunc",
    "registerCoordinateSystem",
    "CoordinateSystem",
    "register",
    "getCoordinateSystemDimensions",
    "coordSysCreator",
    "getDimensionsInfo",
    "dimensions",
    "slice",
    "registerLayout",
    "layoutFunc",
    "extendComponentModel",
    "extendComponentView",
    "extendSeriesModel",
    "extendChartView",
    "setCanvasCreator",
    "creator",
    "$override",
    "registerMap",
    "mapName",
    "geoJson",
    "specialAreas",
    "features",
    "JSON",
    "Function",
    "getMap",
    "dataTool",
    "___ec_export",
    "echarts",
    "visualSymbol",
    "layoutPoints",
    "dataSample",
    "getLayoutRect",
    "layoutMode",
    "ignoreSize",
    "defaultOption",
    "show",
    "text",
    "subtext",
    "subtarget",
    "borderColor",
    "borderWidth",
    "padding",
    "itemGap",
    "textStyle",
    "fontSize",
    "fontWeight",
    "color",
    "subtextStyle",
    "titleModel",
    "removeAll",
    "textStyleModel",
    "subtextStyleModel",
    "textAlign",
    "textBaseline",
    "textEl",
    "Text",
    "setTextStyle",
    "textFill",
    "getTextColor",
    "disableBox",
    "z2",
    "textRect",
    "getBoundingRect",
    "subText",
    "subTextEl",
    "textVerticalAlign",
    "link",
    "sublink",
    "open",
    "groupRect",
    "layoutOption",
    "getBoxLayoutParams",
    "layoutRect",
    "attr",
    "alignStyle",
    "margin",
    "getItemStyle",
    "fill",
    "rect",
    "Rect",
    "shape",
    "r",
    "subPixelOptimizeRect",
    "echarts.init",
    "document",
    "getElementById",
    "title",
    "tooltip",
    "toolbox",
    "feature",
    "dataView",
    "saveAsImage",
    "restore",
    "xAxis",
    "yAxis",
    "smooth"
  ],
  "mappings": "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"
}